# Generated by Django 5.2.4 on 2025-07-25 16:03

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=70, validators=[django.core.validators.RegexValidator(message='Full name must contain only letters and spaces', regex='^[A-Za-z ]+$')])),
                ('phone_number', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be 10 digits starting with 07', regex='^07\\d{8}$')])),
                ('type', models.CharField(choices=[('farmer', 'Farmer'), ('cooperative', 'Cooperative')], max_length=20)),
                ('national_id', models.CharField(blank=True, help_text='Required for farmers only!', max_length=50, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='National ID must be 7 digits', regex='^\\d{7}$')])),
                ('cooperative_id', models.CharField(blank=True, help_text='Required for cooperatives only!', max_length=50, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Cooperative ID must be in format COOP-XXXX-XXXX', regex='^COOP-\\d{4}-\\d{4}$')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
